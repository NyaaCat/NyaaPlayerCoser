apply plugin: "java-library"
apply plugin: "maven-publish"

ext.majorVersion = 6
ext.minorVersion = 4
ext.minecraftVersion = "1.14.1"
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Suppiled by Jenkins
ext.buildNumber = System.env.BUILD_NUMBER == null ? "x"                : "$System.env.BUILD_NUMBER"
ext.mavenDirectory = System.env.MAVEN_DIR == null ? "$projectDir/repo" : "$System.env.MAVEN_DIR"

// Search for spigot nms jar file
String spigotNmsPath = "";
if (new File("${projectDir}/lib/spigot-${minecraftVersion}.jar").exists()) {
    spigotNmsPath = "${projectDir}/lib/spigot-${minecraftVersion}.jar"
} else if (new File("${mavenDirectory}/spigot-${minecraftVersion}-latest.jar").exists()) {
    spigotNmsPath = "${mavenDirectory}/spigot-${minecraftVersion}-latest.jar"
} else {
    spigotNmsPath = "${projectDir}/lib/spigot-${minecraftVersion}.jar"
    def f = new File(spigotNmsPath)
    println "Downloading spigot-${minecraftVersion}.jar"
    f.getParentFile().mkdirs();
    new URL("https://ci.nyaacat.com/maven/spigot-${minecraftVersion}-latest.jar").withInputStream{ i -> f.withOutputStream{ it << i }}
}

// Version used for distribution. Different from maven repo
group = "cat.nyaa"
archivesBaseName = "NyaaPlayerCoser-mc$minecraftVersion"
version = "$majorVersion.$minorVersion.$buildNumber"

// extra compile warnings
compileJava {
    options.compilerArgs += ["-Xlint:deprecation,unchecked,rawtypes"]
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
    maven { name 'Spigot';      url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { name 'Sonatype';    url 'https://oss.sonatype.org/content/groups/public' }
    maven { name 'vault-repo';  url 'http://nexus.hc.to/content/repositories/pub_releases' }
    maven { name 'ess-repo';    url 'http://repo.ess3.net/content/groups/essentials' }
    maven { name 'dmulloy-repo';url 'http://repo.dmulloy2.net/nexus/repository/public/' }
    maven { name 'NyaaCat';     url 'https://ci.nyaacat.com/maven/' }
}

dependencies {
    // spigot dependencies
    compileOnly "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"
    compileOnly files(spigotNmsPath)

    // Nyaa plugins
    if (gradle.hasProperty("useLocalDependencies") && gradle.useLocalDependencies) {
        compileOnly project(":NyaaCore")
        compileOnly project(":NyaaUtils")
        compileOnly project(":HamsterEcoHelper")
    } else {
        compileOnly('cat.nyaa:nyaacore:6.4-SNAPSHOT')
        compileOnly('cat.nyaa:nyaautils:6.4-SNAPSHOT')
        compileOnly('cat.nyaa:hamsterecohelper:6.4-SNAPSHOT')
    }

    // other plugins
    compileOnly "com.comphenix.protocol:ProtocolLib-API:4.4.0"

    // Annotation precessor
    compileOnly 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor 'org.librazy:NyaaUtilsLangChecker:2.0-SNAPSHOT'
    annotationProcessor "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT"

}

// extra config for NyaaCore Language string
// TODO: langcheck temporarily disabled
// tasks.withType(JavaCompile) {
//     String nyaaCoreLangDir = gradle.hasProperty("NyaaCoreLangDirs") ? gradle.NyaaCoreLangDirs : null
//     if (nyaaCoreLangDir == null) { nyaaCoreLangDir = System.getenv("NYAACORE_LANG_DIR") }
//     options.compilerArgs += ["-Xplugin:NyaaUtilsLangAnnotationProcessor", "-Xlint:deprecation"]
//     if (nyaaCoreLangDir != null) {
//         options.compilerArgs += ["-ALANG_DIR_ADDITIONAL_PATH=" + nyaaCoreLangDir]
//     }
// }

// publications
task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}
task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}
processResources { // modify version string
    filesMatching("**/plugin.yml") {
        expand 'version': project.version
    }
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
            groupId "cat.nyaa"
            artifactId "npc"
            version "$majorVersion.$minorVersion-SNAPSHOT"
            from components.java
        }
    }
    repositories {
        maven {
            url "${mavenDirectory}"
        }
    }
}

javadoc {
    (options as StandardJavadocDocletOptions).with {
        links 'https://docs.oracle.com/javase/8/docs/api/'
        links 'https://hub.spigotmc.org/javadocs/spigot/'
        links 'https://google.github.io/guava/releases/21.0/api/docs/'
        links 'https://nyaacat.github.io/NyaaCentral/NyaaCore/6.3-mc1.13.2/javadoc/'
        links 'https://nyaacat.github.io/NyaaCentral/HamsterEcoHelper/6.2-mc1.13.2/javadoc/'

        locale 'en_US'
        encoding 'UTF-8'
        docEncoding 'UTF-8'
        addBooleanOption('keywords', true)

        def currentJavaVersion = JavaVersion.current()
        if (currentJavaVersion > JavaVersion.VERSION_1_9) {
            options.addBooleanOption('html5', true)
        }

        windowTitle = "NyaaPlayerCoser Javadoc"
        String fullVersion = System.getenv("FULL_VERSION_STRING")
        if (fullVersion != null) {
            docTitle = "<b>NyaaPlayerCoser</b> " + fullVersion
        } else {
            docTitle = "<b>NyaaPlayerCoser</b>"
        }
    }
}